<templateSet group="React/Redux">
  <template name="rcls" value="import React, { Component } from 'react';&#10;&#10;&#10;class $CLASSNAME$ extends Component {&#10;  state = {};&#10;&#10;  render() {&#10;    return (&#10;          &#10;    )&#10;  }&#10;}&#10;&#10;export default $CLASSNAME$;" description="React Class based component" toReformat="false" toShortenFQNames="true">
    <variable name="CLASSNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="rfc" value="import React from 'react'&#10;&#10;&#10;const $COMPONENTNAME$ = () =&gt; {&#10;  return (&#10;        &#10;  )&#10;};&#10;&#10;export default $COMPONENTNAME$;" description="React Functional component" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENTNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="rdxr" value="import { &#10;  $TYPE$ &#10;} from '../actions/types';&#10;&#10;const INITIAL_STATE = {};&#10;&#10;export default (state = INITIAL_STATE, action) =&gt; {&#10;  switch (action.type) {&#10;    case $TYPE$:&#10;    &#10;    &#10;    default:&#10;      return state;&#10;  }&#10;};" description="Redux reducer" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
</templateSet>